# Generated by Django 4.2.24 on 2025-09-28 04:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="QueryRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("query_text", models.TextField()),
                (
                    "domain",
                    models.CharField(
                        choices=[
                            ("finance", "Finance"),
                            ("medical", "Medical"),
                            ("cross_domain", "Cross Domain"),
                            ("general", "General"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("primary_answer", models.TextField(blank=True)),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("safety_score", models.FloatField(blank=True, null=True)),
                ("faithfulness_score", models.FloatField(blank=True, null=True)),
                ("adaptability_score", models.FloatField(blank=True, null=True)),
                ("interpretability_score", models.FloatField(blank=True, null=True)),
                ("risk_awareness_score", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("processing_time", models.FloatField(blank=True, null=True)),
                ("additional_data", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SystemPerformance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("total_queries", models.IntegerField(default=0)),
                ("successful_queries", models.IntegerField(default=0)),
                ("failed_queries", models.IntegerField(default=0)),
                ("average_response_time", models.FloatField(blank=True, null=True)),
                ("avg_faithfulness_score", models.FloatField(blank=True, null=True)),
                ("avg_adaptability_score", models.FloatField(blank=True, null=True)),
                (
                    "avg_interpretability_score",
                    models.FloatField(blank=True, null=True),
                ),
                ("avg_risk_awareness_score", models.FloatField(blank=True, null=True)),
                ("finance_queries", models.IntegerField(default=0)),
                ("medical_queries", models.IntegerField(default=0)),
                ("cross_domain_queries", models.IntegerField(default=0)),
                ("general_queries", models.IntegerField(default=0)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SafetyAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("medical_safety", "Medical Safety"),
                            ("financial_safety", "Financial Safety"),
                            ("content_safety", "Content Safety"),
                            ("system_error", "System Error"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("message", models.TextField()),
                ("details", models.JSONField(blank=True, default=dict)),
                ("resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "query",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="safety_alerts",
                        to="fair_agent_app.queryrecord",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuerySession",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(max_length=100, unique=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="queryrecord",
            name="session",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="queries",
                to="fair_agent_app.querysession",
            ),
        ),
        migrations.CreateModel(
            name="EvaluationMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "faithfulness_token_overlap",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "faithfulness_semantic_similarity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "faithfulness_factual_consistency",
                    models.FloatField(blank=True, null=True),
                ),
                ("calibration_ece", models.FloatField(blank=True, null=True)),
                ("calibration_mce", models.FloatField(blank=True, null=True)),
                ("calibration_brier_score", models.FloatField(blank=True, null=True)),
                ("robustness_semantic_score", models.FloatField(blank=True, null=True)),
                (
                    "robustness_syntactic_score",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "robustness_adversarial_score",
                    models.FloatField(blank=True, null=True),
                ),
                ("safety_medical_safety", models.FloatField(blank=True, null=True)),
                ("safety_financial_safety", models.FloatField(blank=True, null=True)),
                ("safety_content_safety", models.FloatField(blank=True, null=True)),
                (
                    "interpretability_reasoning_clarity",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "interpretability_explanation_completeness",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "interpretability_evidence_citation",
                    models.FloatField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "query",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="fair_agent_app.queryrecord",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "overall_rating",
                    models.IntegerField(
                        choices=[
                            (1, "Very Poor"),
                            (2, "Poor"),
                            (3, "Average"),
                            (4, "Good"),
                            (5, "Excellent"),
                        ]
                    ),
                ),
                (
                    "accuracy_rating",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Very Poor"),
                            (2, "Poor"),
                            (3, "Average"),
                            (4, "Good"),
                            (5, "Excellent"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "clarity_rating",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Very Poor"),
                            (2, "Poor"),
                            (3, "Average"),
                            (4, "Good"),
                            (5, "Excellent"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "safety_rating",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Very Poor"),
                            (2, "Poor"),
                            (3, "Average"),
                            (4, "Good"),
                            (5, "Excellent"),
                        ],
                        null=True,
                    ),
                ),
                ("comments", models.TextField(blank=True)),
                ("suggestions", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "query",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="fair_agent_app.queryrecord",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("query", "user")},
            },
        ),
    ]
